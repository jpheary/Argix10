//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Argix.Freight {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceInfo", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
    [System.SerializableAttribute()]
    public partial class ServiceInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConnectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TerminalIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Connection {
            get {
                return this.ConnectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionField, value) != true)) {
                    this.ConnectionField = value;
                    this.RaisePropertyChanged("Connection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TerminalID {
            get {
                return this.TerminalIDField;
            }
            set {
                if ((this.TerminalIDField.Equals(value) != true)) {
                    this.TerminalIDField = value;
                    this.RaisePropertyChanged("TerminalID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
    [System.SerializableAttribute()]
    public partial class ConfigurationFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.CollectionDataContractAttribute(Name="UserConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Argix", ItemName="KeyValueOfstringstring", KeyName="Key", ValueName="Value")]
    [System.SerializableAttribute()]
    public class UserConfiguration : System.Collections.Generic.Dictionary<string, string> {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TraceMessage", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
    [System.SerializableAttribute()]
    public partial class TraceMessage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComputerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Keyword3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Argix.Freight.LogLevel LogLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Computer {
            get {
                return this.ComputerField;
            }
            set {
                if ((object.ReferenceEquals(this.ComputerField, value) != true)) {
                    this.ComputerField = value;
                    this.RaisePropertyChanged("Computer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword1 {
            get {
                return this.Keyword1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword1Field, value) != true)) {
                    this.Keyword1Field = value;
                    this.RaisePropertyChanged("Keyword1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword2 {
            get {
                return this.Keyword2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword2Field, value) != true)) {
                    this.Keyword2Field = value;
                    this.RaisePropertyChanged("Keyword2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Keyword3 {
            get {
                return this.Keyword3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Keyword3Field, value) != true)) {
                    this.Keyword3Field = value;
                    this.RaisePropertyChanged("Keyword3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Argix.Freight.LogLevel LogLevel {
            get {
                return this.LogLevelField;
            }
            set {
                if ((this.LogLevelField.Equals(value) != true)) {
                    this.LogLevelField = value;
                    this.RaisePropertyChanged("LogLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LogLevel", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
    public enum LogLevel : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Debug = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Information = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
    [System.SerializableAttribute()]
    public partial class TsortFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InboundShipment", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
    [System.SerializableAttribute()]
    public partial class InboundShipment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarrierNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CartonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrentLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DriverNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FloorStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FreightTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSortableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PalletsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiveDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SealNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipperNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShipperNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StorageTrailerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TDSNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TerminalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TrailerNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnloadedStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VendorKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarrierNumber {
            get {
                return this.CarrierNumberField;
            }
            set {
                if ((this.CarrierNumberField.Equals(value) != true)) {
                    this.CarrierNumberField = value;
                    this.RaisePropertyChanged("CarrierNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cartons {
            get {
                return this.CartonsField;
            }
            set {
                if ((this.CartonsField.Equals(value) != true)) {
                    this.CartonsField = value;
                    this.RaisePropertyChanged("Cartons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientNumber {
            get {
                return this.ClientNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNumberField, value) != true)) {
                    this.ClientNumberField = value;
                    this.RaisePropertyChanged("ClientNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentLocation {
            get {
                return this.CurrentLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentLocationField, value) != true)) {
                    this.CurrentLocationField = value;
                    this.RaisePropertyChanged("CurrentLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DriverNumber {
            get {
                return this.DriverNumberField;
            }
            set {
                if ((this.DriverNumberField.Equals(value) != true)) {
                    this.DriverNumberField = value;
                    this.RaisePropertyChanged("DriverNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FloorStatus {
            get {
                return this.FloorStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.FloorStatusField, value) != true)) {
                    this.FloorStatusField = value;
                    this.RaisePropertyChanged("FloorStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightID {
            get {
                return this.FreightIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightIDField, value) != true)) {
                    this.FreightIDField = value;
                    this.RaisePropertyChanged("FreightID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FreightType {
            get {
                return this.FreightTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FreightTypeField, value) != true)) {
                    this.FreightTypeField = value;
                    this.RaisePropertyChanged("FreightType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSortable {
            get {
                return this.IsSortableField;
            }
            set {
                if ((this.IsSortableField.Equals(value) != true)) {
                    this.IsSortableField = value;
                    this.RaisePropertyChanged("IsSortable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Pallets {
            get {
                return this.PalletsField;
            }
            set {
                if ((this.PalletsField.Equals(value) != true)) {
                    this.PalletsField = value;
                    this.RaisePropertyChanged("Pallets");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pickup {
            get {
                return this.PickupField;
            }
            set {
                if ((object.ReferenceEquals(this.PickupField, value) != true)) {
                    this.PickupField = value;
                    this.RaisePropertyChanged("Pickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiveDate {
            get {
                return this.ReceiveDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveDateField, value) != true)) {
                    this.ReceiveDateField = value;
                    this.RaisePropertyChanged("ReceiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SealNumber {
            get {
                return this.SealNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.SealNumberField, value) != true)) {
                    this.SealNumberField = value;
                    this.RaisePropertyChanged("SealNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipperName {
            get {
                return this.ShipperNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipperNameField, value) != true)) {
                    this.ShipperNameField = value;
                    this.RaisePropertyChanged("ShipperName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShipperNumber {
            get {
                return this.ShipperNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ShipperNumberField, value) != true)) {
                    this.ShipperNumberField = value;
                    this.RaisePropertyChanged("ShipperNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StorageTrailerNumber {
            get {
                return this.StorageTrailerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StorageTrailerNumberField, value) != true)) {
                    this.StorageTrailerNumberField = value;
                    this.RaisePropertyChanged("StorageTrailerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TDSNumber {
            get {
                return this.TDSNumberField;
            }
            set {
                if ((this.TDSNumberField.Equals(value) != true)) {
                    this.TDSNumberField = value;
                    this.RaisePropertyChanged("TDSNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TerminalID {
            get {
                return this.TerminalIDField;
            }
            set {
                if ((this.TerminalIDField.Equals(value) != true)) {
                    this.TerminalIDField = value;
                    this.RaisePropertyChanged("TerminalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TrailerNumber {
            get {
                return this.TrailerNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.TrailerNumberField, value) != true)) {
                    this.TrailerNumberField = value;
                    this.RaisePropertyChanged("TrailerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnloadedStatus {
            get {
                return this.UnloadedStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.UnloadedStatusField, value) != true)) {
                    this.UnloadedStatusField = value;
                    this.RaisePropertyChanged("UnloadedStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorKey {
            get {
                return this.VendorKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorKeyField, value) != true)) {
                    this.VendorKeyField = value;
                    this.RaisePropertyChanged("VendorKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StationAssignment", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
    [System.SerializableAttribute()]
    public partial class StationAssignment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Argix.Freight.InboundShipment InboundFreightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Argix.Freight.Workstation SortStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SortTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortTypeIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Argix.Freight.InboundShipment InboundFreight {
            get {
                return this.InboundFreightField;
            }
            set {
                if ((object.ReferenceEquals(this.InboundFreightField, value) != true)) {
                    this.InboundFreightField = value;
                    this.RaisePropertyChanged("InboundFreight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Argix.Freight.Workstation SortStation {
            get {
                return this.SortStationField;
            }
            set {
                if ((object.ReferenceEquals(this.SortStationField, value) != true)) {
                    this.SortStationField = value;
                    this.RaisePropertyChanged("SortStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SortType {
            get {
                return this.SortTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SortTypeField, value) != true)) {
                    this.SortTypeField = value;
                    this.RaisePropertyChanged("SortType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortTypeID {
            get {
                return this.SortTypeIDField;
            }
            set {
                if ((this.SortTypeIDField.Equals(value) != true)) {
                    this.SortTypeIDField = value;
                    this.RaisePropertyChanged("SortTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Workstation", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
    [System.SerializableAttribute()]
    public partial class Workstation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrinterTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScalePortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ScaleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TerminalIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkStationIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrinterPort {
            get {
                return this.PrinterPortField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterPortField, value) != true)) {
                    this.PrinterPortField = value;
                    this.RaisePropertyChanged("PrinterPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrinterType {
            get {
                return this.PrinterTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PrinterTypeField, value) != true)) {
                    this.PrinterTypeField = value;
                    this.RaisePropertyChanged("PrinterType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScalePort {
            get {
                return this.ScalePortField;
            }
            set {
                if ((object.ReferenceEquals(this.ScalePortField, value) != true)) {
                    this.ScalePortField = value;
                    this.RaisePropertyChanged("ScalePort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ScaleType {
            get {
                return this.ScaleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ScaleTypeField, value) != true)) {
                    this.ScaleTypeField = value;
                    this.RaisePropertyChanged("ScaleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TerminalID {
            get {
                return this.TerminalIDField;
            }
            set {
                if ((this.TerminalIDField.Equals(value) != true)) {
                    this.TerminalIDField = value;
                    this.RaisePropertyChanged("TerminalID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Trace {
            get {
                return this.TraceField;
            }
            set {
                if ((this.TraceField.Equals(value) != true)) {
                    this.TraceField = value;
                    this.RaisePropertyChanged("Trace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkStationID {
            get {
                return this.WorkStationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkStationIDField, value) != true)) {
                    this.WorkStationIDField = value;
                    this.RaisePropertyChanged("WorkStationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Zone", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
    [System.SerializableAttribute()]
    public partial class Zone : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedToShipScdeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CanBeClosedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IsExclusiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewLaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewSmallSortLaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RollbackTLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SmallSortLaneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZoneCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedToShipScde {
            get {
                return this.AssignedToShipScdeField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToShipScdeField, value) != true)) {
                    this.AssignedToShipScdeField = value;
                    this.RaisePropertyChanged("AssignedToShipScde");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CanBeClosed {
            get {
                return this.CanBeClosedField;
            }
            set {
                if ((object.ReferenceEquals(this.CanBeClosedField, value) != true)) {
                    this.CanBeClosedField = value;
                    this.RaisePropertyChanged("CanBeClosed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientName {
            get {
                return this.ClientNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNameField, value) != true)) {
                    this.ClientNameField = value;
                    this.RaisePropertyChanged("ClientName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientNumber {
            get {
                return this.ClientNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientNumberField, value) != true)) {
                    this.ClientNumberField = value;
                    this.RaisePropertyChanged("ClientNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IsExclusive {
            get {
                return this.IsExclusiveField;
            }
            set {
                if ((this.IsExclusiveField.Equals(value) != true)) {
                    this.IsExclusiveField = value;
                    this.RaisePropertyChanged("IsExclusive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lane {
            get {
                return this.LaneField;
            }
            set {
                if ((object.ReferenceEquals(this.LaneField, value) != true)) {
                    this.LaneField = value;
                    this.RaisePropertyChanged("Lane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewLane {
            get {
                return this.NewLaneField;
            }
            set {
                if ((object.ReferenceEquals(this.NewLaneField, value) != true)) {
                    this.NewLaneField = value;
                    this.RaisePropertyChanged("NewLane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewSmallSortLane {
            get {
                return this.NewSmallSortLaneField;
            }
            set {
                if ((object.ReferenceEquals(this.NewSmallSortLaneField, value) != true)) {
                    this.NewSmallSortLaneField = value;
                    this.RaisePropertyChanged("NewSmallSortLane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RollbackTL {
            get {
                return this.RollbackTLField;
            }
            set {
                if ((object.ReferenceEquals(this.RollbackTLField, value) != true)) {
                    this.RollbackTLField = value;
                    this.RaisePropertyChanged("RollbackTL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SmallSortLane {
            get {
                return this.SmallSortLaneField;
            }
            set {
                if ((object.ReferenceEquals(this.SmallSortLaneField, value) != true)) {
                    this.SmallSortLaneField = value;
                    this.RaisePropertyChanged("SmallSortLane");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TL {
            get {
                return this.TLField;
            }
            set {
                if ((object.ReferenceEquals(this.TLField, value) != true)) {
                    this.TLField = value;
                    this.RaisePropertyChanged("TL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeID {
            get {
                return this.TypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeIDField, value) != true)) {
                    this.TypeIDField = value;
                    this.RaisePropertyChanged("TypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZoneCode {
            get {
                return this.ZoneCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZoneCodeField, value) != true)) {
                    this.ZoneCodeField = value;
                    this.RaisePropertyChanged("ZoneCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Argix.Freight", ConfigurationName="Freight.ITsortService")]
    public interface ITsortService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/ITsortService/GetServiceInfo", ReplyAction="http://Argix.Freight/ITsortService/GetServiceInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.ConfigurationFault), Action="http://Argix.ConfigurationFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
        Argix.Freight.ServiceInfo GetServiceInfo(int terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/ITsortService/GetUserConfiguration", ReplyAction="http://Argix.Freight/ITsortService/GetUserConfigurationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.ConfigurationFault), Action="http://Argix.ConfigurationFault", Name="ConfigurationFault", Namespace="http://schemas.datacontract.org/2004/07/Argix")]
        Argix.Freight.UserConfiguration GetUserConfiguration(int terminalID, string application, string[] usernames);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://Argix.Freight/ITsortService/WriteLogEntry")]
        void WriteLogEntry(int terminalID, Argix.Freight.TraceMessage m);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITsortServiceChannel : Argix.Freight.ITsortService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TsortServiceClient : System.ServiceModel.ClientBase<Argix.Freight.ITsortService>, Argix.Freight.ITsortService {
        
        public TsortServiceClient() {
        }
        
        public TsortServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TsortServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TsortServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TsortServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Argix.Freight.ServiceInfo GetServiceInfo(int terminalID) {
            return base.Channel.GetServiceInfo(terminalID);
        }
        
        public Argix.Freight.UserConfiguration GetUserConfiguration(int terminalID, string application, string[] usernames) {
            return base.Channel.GetUserConfiguration(terminalID, application, usernames);
        }
        
        public void WriteLogEntry(int terminalID, Argix.Freight.TraceMessage m) {
            base.Channel.WriteLogEntry(terminalID, m);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Argix.Freight", ConfigurationName="Freight.IFreightAssignService")]
    public interface IFreightAssignService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetTerminals", ReplyAction="http://Argix.Freight/IFreightAssignService/GetTerminalsResponse")]
        System.Data.DataSet GetTerminals();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetInboundFreight", ReplyAction="http://Argix.Freight/IFreightAssignService/GetInboundFreightResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetInboundFreight(int terminalID, System.DateTime fromDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetInboundShipment", ReplyAction="http://Argix.Freight/IFreightAssignService/GetInboundShipmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        Argix.Freight.InboundShipment GetInboundShipment(int terminalID, string freightID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/StartSort", ReplyAction="http://Argix.Freight/IFreightAssignService/StartSortResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool StartSort(Argix.Freight.InboundShipment shipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/StopSort", ReplyAction="http://Argix.Freight/IFreightAssignService/StopSortResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool StopSort(Argix.Freight.InboundShipment shipment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetStationAssignments", ReplyAction="http://Argix.Freight/IFreightAssignService/GetStationAssignmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetStationAssignments(int terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/CreateStationAssignment", ReplyAction="http://Argix.Freight/IFreightAssignService/CreateStationAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool CreateStationAssignment(int terminalID, string workStationID, string freightID, int sortTypeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/DeleteStationAssignment", ReplyAction="http://Argix.Freight/IFreightAssignService/DeleteStationAssignmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool DeleteStationAssignment(Argix.Freight.StationAssignment assignment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetFreightSortTypes", ReplyAction="http://Argix.Freight/IFreightAssignService/GetFreightSortTypesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetFreightSortTypes(int terminalID, string freightID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IFreightAssignService/GetAssignableSortStations", ReplyAction="http://Argix.Freight/IFreightAssignService/GetAssignableSortStationsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetAssignableSortStations(int terminalID, string freightID, int sortTypeID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFreightAssignServiceChannel : Argix.Freight.IFreightAssignService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FreightAssignServiceClient : System.ServiceModel.ClientBase<Argix.Freight.IFreightAssignService>, Argix.Freight.IFreightAssignService {
        
        public FreightAssignServiceClient() {
        }
        
        public FreightAssignServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FreightAssignServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FreightAssignServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FreightAssignServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetTerminals() {
            return base.Channel.GetTerminals();
        }
        
        public System.Data.DataSet GetInboundFreight(int terminalID, System.DateTime fromDate) {
            return base.Channel.GetInboundFreight(terminalID, fromDate);
        }
        
        public Argix.Freight.InboundShipment GetInboundShipment(int terminalID, string freightID) {
            return base.Channel.GetInboundShipment(terminalID, freightID);
        }
        
        public bool StartSort(Argix.Freight.InboundShipment shipment) {
            return base.Channel.StartSort(shipment);
        }
        
        public bool StopSort(Argix.Freight.InboundShipment shipment) {
            return base.Channel.StopSort(shipment);
        }
        
        public System.Data.DataSet GetStationAssignments(int terminalID) {
            return base.Channel.GetStationAssignments(terminalID);
        }
        
        public bool CreateStationAssignment(int terminalID, string workStationID, string freightID, int sortTypeID) {
            return base.Channel.CreateStationAssignment(terminalID, workStationID, freightID, sortTypeID);
        }
        
        public bool DeleteStationAssignment(Argix.Freight.StationAssignment assignment) {
            return base.Channel.DeleteStationAssignment(assignment);
        }
        
        public System.Data.DataSet GetFreightSortTypes(int terminalID, string freightID) {
            return base.Channel.GetFreightSortTypes(terminalID, freightID);
        }
        
        public System.Data.DataSet GetAssignableSortStations(int terminalID, string freightID, int sortTypeID) {
            return base.Channel.GetAssignableSortStations(terminalID, freightID, sortTypeID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Argix.Freight", ConfigurationName="Freight.IZoneClosingService")]
    public interface IZoneClosingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/GetTLs", ReplyAction="http://Argix.Freight/IZoneClosingService/GetTLsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetTLs(int terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/GetUnassignedTLs", ReplyAction="http://Argix.Freight/IZoneClosingService/GetUnassignedTLsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetUnassignedTLs(int terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/GetUnassignedClosedTLs", ReplyAction="http://Argix.Freight/IZoneClosingService/GetUnassignedClosedTLsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetUnassignedClosedTLs(int terminalID, int closedDays);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/GetLanes", ReplyAction="http://Argix.Freight/IZoneClosingService/GetLanesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        System.Data.DataSet GetLanes(int terminalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/ChangeLanes", ReplyAction="http://Argix.Freight/IZoneClosingService/ChangeLanesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool ChangeLanes(int terminalID, Argix.Freight.Zone zone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Argix.Freight/IZoneClosingService/CloseZone", ReplyAction="http://Argix.Freight/IZoneClosingService/CloseZoneResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Argix.Freight.TsortFault), Action="http://Argix.Freight.TsortFault", Name="TsortFault", Namespace="http://schemas.datacontract.org/2004/07/Argix.Freight")]
        bool CloseZone(int terminalID, Argix.Freight.Zone zone);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IZoneClosingServiceChannel : Argix.Freight.IZoneClosingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ZoneClosingServiceClient : System.ServiceModel.ClientBase<Argix.Freight.IZoneClosingService>, Argix.Freight.IZoneClosingService {
        
        public ZoneClosingServiceClient() {
        }
        
        public ZoneClosingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ZoneClosingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZoneClosingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ZoneClosingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataSet GetTLs(int terminalID) {
            return base.Channel.GetTLs(terminalID);
        }
        
        public System.Data.DataSet GetUnassignedTLs(int terminalID) {
            return base.Channel.GetUnassignedTLs(terminalID);
        }
        
        public System.Data.DataSet GetUnassignedClosedTLs(int terminalID, int closedDays) {
            return base.Channel.GetUnassignedClosedTLs(terminalID, closedDays);
        }
        
        public System.Data.DataSet GetLanes(int terminalID) {
            return base.Channel.GetLanes(terminalID);
        }
        
        public bool ChangeLanes(int terminalID, Argix.Freight.Zone zone) {
            return base.Channel.ChangeLanes(terminalID, zone);
        }
        
        public bool CloseZone(int terminalID, Argix.Freight.Zone zone) {
            return base.Channel.CloseZone(terminalID, zone);
        }
    }
}
